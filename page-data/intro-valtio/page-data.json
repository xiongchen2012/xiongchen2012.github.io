{"componentChunkName":"component---src-templates-blog-post-js","path":"/intro-valtio/","result":{"data":{"site":{"siteMetadata":{"title":"Deathdealer's Blog"}},"markdownRemark":{"id":"ffb55ee7-03aa-5714-a330-511d1f8d63ea","excerpt":"又一个状态管理的轮子。查了一下字典在芬兰语里面就是的意思，名字起的真是简单粗暴（作者却是个日本人） 安装 使用 1. 基本使用 官方文档宣称可以让对象拥有自我意识（实际上还是基于Proxy进行对原对象进行了代理） 然后就可以在任何地方、像普通的js对象一样直接修改值（Mutate from anywhere…","html":"<img src=\"https://obs-1d2f.oss-cn-hangzhou.aliyuncs.com/images/image-20210323224435352.png\" alt=\"image-20210323224435352\" style=\"zoom:67%;\">\n<p>又一个状态管理的轮子。查了一下字典<code class=\"language-text\">Valtio</code>在芬兰语里面就是<code class=\"language-text\">状态</code>的意思，名字起的真是简单粗暴（作者却是个日本人）</p>\n<h4>安装</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> valtio</code></pre></div>\n<h4>使用</h4>\n<h5>1. 基本使用</h5>\n<p>官方文档宣称<code class=\"language-text\">Valtio</code>可以让对象拥有自我意识（实际上还是基于Proxy进行对原对象进行了代理）</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'valtio'</span>\n\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">++</span>state<span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>然后就可以在任何地方、像普通的js对象一样直接修改值（Mutate from anywhere）。如果需要在React中使用，可以使用valtio提供的<code class=\"language-text\">useSnapshot</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSnapshot <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'valtio'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Counter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> snap <span class=\"token operator\">=</span> <span class=\"token function\">useSnapshot</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 这里的state就是上面proxy代理过的对象</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>snap<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">++</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">+1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>官方把<code class=\"language-text\">state</code>包装成<code class=\"language-text\">snapshot</code>快照，快照的本质是一个<code class=\"language-text\">immutable</code>的对象，个人感觉比immer中对草稿进行修改然后得到一个新的state的概念更容易理解，也更贴近函数组件的本质。</p>\n<p>上述示例中，每点击一次【+1】按钮，修改一次state的值,得到一个新的快照，React展示的是当前快照的值。</p>\n<h5>2. Suspense</h5>\n<p>如果代理的对象某个字段是<code class=\"language-text\">Promise</code>的话，valtio还支持和Suspense一起使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> post<span class=\"token operator\">:</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> snap <span class=\"token operator\">=</span> <span class=\"token function\">useSnapshot</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>snap<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">waiting...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Post</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>3. 订阅变更</h5>\n<p>Valtio提供了<code class=\"language-text\">subscribe</code>文法用来订阅state的变更。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> subscribe <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'valtio'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> subscribeKey <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'valtio/utils'</span>\n\n<span class=\"token comment\">// 可以直接订阅整个state的变更</span>\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'state has changed to'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 也可以只订阅state中某个部分的变更</span>\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> <span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'state.obj has changed to'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">.</span>obj<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 如果你想订阅的字段是JS原始类型的话，用subscribeKey更合适一点</span>\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> <span class=\"token function\">subscribeKey</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'state.count has changed to'</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>别忘了在适当的时候调用一下<code class=\"language-text\">unsubscribe</code>方法来取消订阅</p>\n<h5>4. 同步更新</h5>\n<p>默认情况下，state的变更在触发re-render之前是异步的，批处理的。如果想要同步触发re-render可以在<code class=\"language-text\">useSnapshot</code>时传入<code class=\"language-text\">{sync: true}</code>来关闭这个特性</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">TextBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> snap <span class=\"token operator\">=</span> <span class=\"token function\">useSnapshot</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> sync<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>snap<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span></span> \n              <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>5. 在vanilla-js中使用</h5>\n<p>valtio不仅仅是给react使用的，也可以直接在vanilla中使用，用法基本上与react一样</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> proxy<span class=\"token punctuation\">,</span> subscribe<span class=\"token punctuation\">,</span> snapshot <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'valtio/vanilla'</span>\n\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'state is mutated'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">snapshot</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token comment\">// A snapshot is an immutable object</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>最后</h4>\n<p>目前项目才创建了4个月左右，目前github上收获了2.1K个星星，源码也很简单，有兴趣的可以clone下来阅读，很容易理解。项目还处理发展期，期待提供更多实用的API或hooks出来。</p>\n<p>和<code class=\"language-text\">immer</code>比较类似，又进一步简化了获得新<code class=\"language-text\">state</code>后的写法，直接使用快照中的值就行了。<code class=\"language-text\">immer</code>的话还要自己处理。</p>\n<p><a href=\"https://github.com/pmndrs/valtio\">项目地址</a></p>","frontmatter":{"title":"valtio简介","date":"2021/03/23 22:46:32","description":"介绍一种类似于immer但是使用更简单的状态管理库valtio"}},"previous":{"fields":{"slug":"/script-defer-async/"},"frontmatter":{"title":"script标签中的defer和async"}},"next":{"fields":{"slug":"/svelte/svelte-1/"},"frontmatter":{"title":"Svelte学习笔记（1）"}}},"pageContext":{"id":"ffb55ee7-03aa-5714-a330-511d1f8d63ea","previousPostId":"81077fb3-9584-5e06-9d04-e7d82587a925","nextPostId":"e4e4749f-02cd-57fa-8b10-69177357cd9f"}},"staticQueryHashes":["2355076697","2841359383"]}