{"componentChunkName":"component---src-templates-blog-post-js","path":"/basic/webpack-hint/","result":{"data":{"site":{"siteMetadata":{"title":"Deathdealer's Blog"}},"markdownRemark":{"id":"64648fc1-9d22-5580-93f8-d41d8cd521b0","excerpt":"有两种方法打开的语法提示 1. 使用定义 在上面引用webpack的配置定义即可 以下是有效的： 以下是无效的，注意一定要在module.exports上面一行，中间跨越了其它代码就不起作用了。 来自于. 2. 使用Schema文件 这种方式适用于以为配置文件的webpack工程（如果你的工程用的webpack…","html":"<p>有两种方法打开<code class=\"language-text\">webpack.config.js</code>的语法提示</p>\n<h3>1. 使用<code class=\"language-text\">Typescript</code>定义</h3>\n<p>在<code class=\"language-text\">module.exports</code>上面引用webpack的配置定义即可</p>\n<ul>\n<li>以下是有效的：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/** @type {import('webpack').Configuration} */</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 提示有效</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>以下是无效的，<strong>注意一定要在module.exports上面一行，中间跨越了其它代码就不起作用了。</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @type {import('webpack').Configuration} */</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 不提示</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Configuration</code>来自于<a href=\"https://www.npmjs.com/package/@types/webpack\"><code class=\"language-text\">@types/webpack</code></a>.</p>\n<h3>2. 使用Schema文件</h3>\n<p>这种方式适用于以<code class=\"language-text\">webpack.config.json</code>为配置文件的webpack工程（如果你的工程用的webpack.config.js就不适用了）</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"$schema\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./node_modules/webpack/schemas/WebpackOptions.json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 其它配置</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>不推荐这种方式配置，因为json配置文件失去了<code class=\"language-text\">webpack.config.js</code>的灵活性和可编程性。</p>","frontmatter":{"title":"webpack.config.js的智能提示","date":"2021/12/07 13:50:13","description":"vscode为.babelrc，package.json和jsconfig.json这些文件内置了语法提示，但是webpack却没有内置的语法提示。"}},"previous":{"fields":{"slug":"/react/react-render-refs/"},"frontmatter":{"title":"React Rendering教程（6） - Refs"}},"next":{"fields":{"slug":"/basic/javascript_2021_monthbymonth/"},"frontmatter":{"title":"Javascript2021年大事记"}}},"pageContext":{"id":"64648fc1-9d22-5580-93f8-d41d8cd521b0","previousPostId":"e99353ba-8aa0-5ae7-bc97-0330eaef9e8e","nextPostId":"599e3480-2f74-5e2a-b73f-bdd0b0999065"}},"staticQueryHashes":["2355076697","2841359383"]}