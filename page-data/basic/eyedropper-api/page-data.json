{"componentChunkName":"component---src-templates-blog-post-js","path":"/basic/eyedropper-api/","result":{"data":{"site":{"siteMetadata":{"title":"Deathdealer's Blog"}},"markdownRemark":{"id":"82ad39b0-4070-53d2-93ce-38e355291cc0","excerpt":"EyeDropper API是什么  EyeDropper，没错！吸管工具，凡是做过前端的人都有过安装一个吸管工具用来吸取设计稿中某个颜色值的经历，今后这个工具浏览器会原生支持了，并且提供全套的API供我们使用。 EyeDropper API是 Capabilities Project…","html":"<h3>EyeDropper API是什么</h3>\n<p> EyeDropper，没错！吸管工具，凡是做过前端的人都有过安装一个吸管工具用来吸取设计稿中某个颜色值的经历，今后这个工具浏览器会原生支持了，并且提供全套的API供我们使用。</p>\n<p>EyeDropper API是 <a href=\"https://web.dev/fugu-status/\">Capabilities Project</a> 项目的一部分，目前仍然在开发中。这篇博客会在随着实现的过程随时更新。</p>\n<h3>和<code class=\"language-text\">type=&#39;color&#39;</code>的区别</h3>\n<p>现有的HTML5中，<code class=\"language-text\">&lt; input type=&#39;color&#39; /&gt;</code>也可以吸取任意地方的颜色，它和EyeDropper API有什么不一样？主要是<code class=\"language-text\">input</code>提供的功能太多了，如果我只需要一个吸管工具的话，放置一个<code class=\"language-text\">input</code>有点小题大作， EyeDropper API提供了一种轻量级的吸色解决方案。</p>\n<img src=\"https://obs-1d2f.oss-cn-hangzhou.aliyuncs.com/images/image-20211030094832772.png\" alt=\"image-20211030094832772\" style=\"zoom:50%;\">\n<h3>当前状态</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Step</th>\n<th align=\"left\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1. EyeDropper API的解释</td>\n<td align=\"left\"><a href=\"https://github.com/WICG/eyedropper-api\">完成</a></td>\n</tr>\n<tr>\n<td align=\"left\">2. 初始化的草案和规范</td>\n<td align=\"left\"><a href=\"https://wicg.github.io/eyedropper-api/\">完成</a></td>\n</tr>\n<tr>\n<td align=\"left\">3. 收集反馈&#x26;设计迭代</td>\n<td align=\"left\"><a href=\"https://web.dev/eyedropper/#feedback\">进行中</a></td>\n</tr>\n<tr>\n<td align=\"left\">4. Origin Trial</td>\n<td align=\"left\">完成</td>\n</tr>\n<tr>\n<td align=\"left\">5. <strong>启动</strong></td>\n<td align=\"left\"><strong>Chromium 95</strong> (只有桌面版可用)</td>\n</tr>\n</tbody>\n</table>\n<h3>EyeDropper API使用方法</h3>\n<h4>特征检测和浏览器支持</h4>\n<p>首先，判断当前浏览器是否支持EyeDropper</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'EyeDropper'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// EyeDropper API可用</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>注：目前基于Chromium的浏览器（Chrome和Edge)从95版本开始支持EyeDropper API</p>\n<h4>API的使用</h4>\n<p>先创建 <code class=\"language-text\">EyeDropper</code> 的实例对象，然后调用该实例的 <code class=\"language-text\">open()</code> 方法。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> eyeDropper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EyeDropper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eyeDropper<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The user selected a pixel, here is its color:</span>\n  <span class=\"token keyword\">const</span> colorHexValue <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>sRGBHex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The user escaped the eyedropper mode.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p> 调用<code class=\"language-text\">open()</code> 方法会唤起一个吸管的UI，同时返回一个<code class=\"language-text\">promise</code>，当用户吸取屏幕上的任意颜色后<code class=\"language-text\">resolve</code>，接着通过访问resolve后的<code class=\"language-text\">sRGBHex</code> 属性可以获取用户吸取的颜色值， (<code class=\"language-text\">格式是#RRGGBB</code>)；用户如果按<code class=\"language-text\">esc</code>键，进入<code class=\"language-text\">reject</code>状态。</p>\n<p>除了<code class=\"language-text\">esc</code>之外，也可以通过编程方式取消吸色：把 <a href=\"https://developer.mozilla.org/docs/Web/API/AbortController\">AbortController</a> 的<code class=\"language-text\">signal</code>对象传递给 <code class=\"language-text\">open()</code> 方法，如下所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> abortController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eyeDropper<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>signal<span class=\"token operator\">:</span> abortController<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 取消吸色</span>\nabortController<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>总结以上API，提取了一个共通函数:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sampleColorFromScreen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">abortController</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> eyeDropper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EyeDropper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eyeDropper<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>signal<span class=\"token operator\">:</span> abortController<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span>sRGBHex<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>参考资料</h3>\n<ul>\n<li><a href=\"https://github.com/WICG/eyedropper-api\">Public explainer</a></li>\n<li><a href=\"https://captainbrosset.github.io/eyedropper-demos/\">EyeDropper API Demo</a> | <a href=\"https://github.com/captainbrosset/eyedropper-demos\">EyeDropper API Demo source</a></li>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=897309\">Chromium tracking bug</a></li>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=897309\">ChromeStatus.com entry</a></li>\n<li><a href=\"https://github.com/w3ctag/design-reviews/issues/587\">TAG Review</a></li>\n<li><a href=\"https://lists.webkit.org/pipermail/webkit-dev/2021-July/031929.html\">WebKit position request</a></li>\n<li><a href=\"https://github.com/mozilla/standards-positions/issues/557\">Mozilla position request</a></li>\n<li><a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/rdniQ0D5UfY/m/Aywn9XyyAAAJ\">Intent to Ship</a></li>\n<li><a href=\"https://web.dev/eyedropper/\">Picking colors of any pixel on the screen with the EyeDropper API</a></li>\n</ul>","frontmatter":{"title":"Introduce to EyeDropper API","date":"2021/10/30 09:24:13","description":"本文介绍浏览器原生的吸管API（EyeDropper)的现状和使用"}},"previous":{"fields":{"slug":"/typescript/type-vs-interface/"},"frontmatter":{"title":"Typescript：Type和Interface的异同点"}},"next":{"fields":{"slug":"/react/react-render-refs/"},"frontmatter":{"title":"React Rendering教程（6） - Refs"}}},"pageContext":{"id":"82ad39b0-4070-53d2-93ce-38e355291cc0","previousPostId":"968e9555-be01-5b7f-a5c5-b5ddcddbbd8e","nextPostId":"e99353ba-8aa0-5ae7-bc97-0330eaef9e8e"}},"staticQueryHashes":["2355076697","2841359383"]}