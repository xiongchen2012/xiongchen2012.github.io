{"componentChunkName":"component---src-templates-blog-post-js","path":"/svelte/svelte-3/","result":{"data":{"site":{"siteMetadata":{"title":"Deathdealer's Blog"}},"markdownRemark":{"id":"98bfced2-3352-506a-9c8f-1aed30fb5f50","excerpt":"Props 和react等框架一样，svelte也是通过向子组件传值。不一样的是，在svelte中，子组件需要用来标记接收props的变量。这里的和js模块里面的export用法完全不一样，看起来很怪异，但是在Svelte中暂时需要去习惯它 父组件传值和react等无异： 子组件需要用标记props…","html":"<h4>Props</h4>\n<p>和react等框架一样，svelte也是通过<code class=\"language-text\">props</code>向子组件传值。不一样的是，在svelte中，子组件需要用<code class=\"language-text\">export</code>来标记接收props的变量。这里的<code class=\"language-text\">export</code>和js模块里面的export用法完全不一样，看起来很怪异，但是在Svelte中暂时需要去习惯它</p>\n<p>父组件传值和react等无异：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>ChildComponent answer<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">42</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>子组件需要用<code class=\"language-text\">export</code>标记props：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">'some_defalut_value'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 标记props，同时可以指定默认值</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>The answer is {answer}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>  // The answer is 42</code></pre></div>\n<p>注意：如果<code class=\"language-text\">export</code>标记的是<code class=\"language-text\">const</code>,<code class=\"language-text\">function</code>,<code class=\"language-text\">class</code>，对父组件来说这些props就是只读的，传什么都不会改变子组件props的值。例：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- App.svelte --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> Nested <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Nested.svelte\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 这里不管传什么到Nested，都显示readOnly，点击按钮还是会alert出消息，而不是在控制台打印消息 --></span>\n&lt;Nested thisIs=\"abcdefg\" greet={ name => {console.log(name)} } />  </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Nested.svelte --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> thisIs <span class=\"token operator\">=</span> <span class=\"token string\">\"readOnly\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>{thisIs}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n&lt;button on:click={() => greet(\"abcd\")}>Click<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>可以使用保留字来作为props名，比如<code class=\"language-text\">class</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\t<span class=\"token keyword\">let</span> className<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> className <span class=\"token keyword\">as</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// creates a `class` property,</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"Svelte学习笔记（3）","date":"2021/04/18 21:41:32","description":"自学Svelte时的学习笔记第3篇，方便自己以后快速复习"}},"previous":{"fields":{"slug":"/svelte/svelte-2/"},"frontmatter":{"title":"Svelte学习笔记（2）"}},"next":{"fields":{"slug":"/typora-aliyunoss/"},"frontmatter":{"title":"picgo在typora中的配置与使用"}}},"pageContext":{"id":"98bfced2-3352-506a-9c8f-1aed30fb5f50","previousPostId":"6b68cdce-65bd-51f0-a883-0d3ee5e46820","nextPostId":"699e06f3-0815-5269-a037-364d1450530b"}},"staticQueryHashes":["2355076697","2841359383"]}