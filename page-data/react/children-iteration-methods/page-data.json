{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/children-iteration-methods/","result":{"data":{"site":{"siteMetadata":{"title":"Deathdealer's Blog"}},"markdownRemark":{"id":"4488f158-deb9-53fd-a036-df85780a1f7b","excerpt":"原文地址，下面是我的翻译 摘要 这篇博客，我们将会讨论和学习如何对进行遍历。特别是我们会深入研究一下React提供的方法，它可以确保遍历时的性能和准确性。 前言 React…","html":"<blockquote>\n<p><a href=\"https://www.smashingmagazine.com/2021/08/react-children-iteration-methods/\">原文地址</a>，下面是我的翻译</p>\n</blockquote>\n<p><strong>摘要</strong> 这篇博客，我们将会讨论和学习如何对<code class=\"language-text\">React children</code>进行遍历。特别是我们会深入研究一下React提供的<code class=\"language-text\">React.Children.toArray</code>方法，它可以确保遍历<code class=\"language-text\">children</code>时的性能和准确性。</p>\n<h3>前言</h3>\n<p>React开发者用的最明显最多的<code class=\"language-text\">prop</code>可能就是<code class=\"language-text\">children</code>了，大部分情况下，其实不需要知道和理解<code class=\"language-text\">children</code>长啥样。但有时候我们可能会用另外的<code class=\"language-text\">element/component</code>封装<code class=\"language-text\">children</code>，或者对它们进行排序，或者获取部分切片（slice），这些情况下，就必须要知道<code class=\"language-text\">children</code>长啥样了。</p>\n<p>这篇博客主要是学习一下React工具方法 <code class=\"language-text\">React.Children.toArray</code> ，它可以让我们观察和遍历 <code class=\"language-text\">children</code> , 同时也会介绍它的一些缺点以及如何克服这些缺点。如果你了解React的基础知识并且知道一点点<code class=\"language-text\">children</code>，那这篇博客就是为你准备的。</p>\n<h3>遍历子组件</h3>\n<p>在使用React时，大多数时候我们不会接触<code class=\"language-text\">children prop</code>，而只是会直接在React组件中使用它，如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mt-10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>但有时候却必须遍历<code class=\"language-text\">children</code>，这样我们就可以增强或更改子组件，而不必让子组自己去搞事情。 一共典型的场景是在父组件在遍历的过程中把索引（数组下标）信息传递给子组件，如下面代码所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Children<span class=\"token punctuation\">,</span> cloneElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Breadcrumbs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> arrayChildren <span class=\"token operator\">=</span> Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        listStyle<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n        display<span class=\"token operator\">:</span> <span class=\"token string\">\"flex\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>arrayChildren<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> isLast <span class=\"token operator\">=</span> index <span class=\"token operator\">===</span> arrayChildren<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLast <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>link <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">BreadcrumbItem child no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n            should be passed a 'link' prop</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> \n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>link <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n                <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>link<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                  display<span class=\"token operator\">:</span> <span class=\"token string\">\"inline-block\"</span><span class=\"token punctuation\">,</span>\n                  textDecoration<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                  </span><span class=\"token punctuation\">{</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    isLast<span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                  isLast<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>isLast <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                >\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">BreadcrumbItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isLast<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        color<span class=\"token operator\">:</span> isLast <span class=\"token operator\">?</span> <span class=\"token string\">\"black\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Breadcrumbs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span> <span class=\"token attr-name\">link</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://goibibo.com/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Goibibo\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span> <span class=\"token attr-name\">link</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://goibibo.com/hotels/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Hotels\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n       A Fancy Hotel Name\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Breadcrumbs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以通过 <a href=\"https://codesandbox.io/embed/sm-article-21-lt6le?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox</a> 来体验一下上面的代码，我们做了以下几件事情：</p>\n<ol>\n<li>调用 <code class=\"language-text\">React.Children.toArray</code> 方法确保 <code class=\"language-text\">children prop</code> 始终是一个数组。如果我们不这么做的话，在获取 <code class=\"language-text\">children.length</code> 时可能会崩掉，因为 <code class=\"language-text\">children</code> 可能是对象，也可能是数组，甚至可能是函数。此外，如果在<code class=\"language-text\">children</code>上调用数组的 <code class=\"language-text\">.map</code> 方法也可能会崩。</li>\n<li>在父组件 <code class=\"language-text\">Breadcrumbs</code> 中通过调用<code class=\"language-text\">React.Children.map</code>方法来遍历它的子组件。</li>\n<li>我们在迭代器（遍历函数）中使用了 <code class=\"language-text\">index</code>  (<code class=\"language-text\">React.Children.map</code>的第二个参数) ，因此，我们可以判断<code class=\"language-text\">child</code>是不是最后一个。</li>\n<li>如果是最后一个子组件，我们会克隆这个子组件并将<code class=\"language-text\">isLast</code>传给它，这样它就可以基于<code class=\"language-text\">isLast</code>应用一些样式。</li>\n<li>如果不是最后一个子组件，我们则必须确保这些子组件必须有<code class=\"language-text\">link</code>这个属性，否则会抛出一个错误。我们同样像第4步一样克隆一个子组件，并把<code class=\"language-text\">isLast</code>传给它，此外还会把它包裹在<code class=\"language-text\">&lt;a&gt;</code>标签里。</li>\n</ol>\n<p> <code class=\"language-text\">Breadcrumbs</code> 和 <code class=\"language-text\">BreadcrumbItem</code> 的使用者不需要关心哪一个子组件需要传<code class=\"language-text\">link</code>，也不需要关心如何应用样式， <code class=\"language-text\">Breadcrumbs</code> 组件内部会自动处理这些事情。</p>\n<p>这种隐式传递<code class=\"language-text\">props</code>的模式<strong>和/或</strong>在父组件中将  <code class=\"language-text\">state</code>及<code class=\"language-text\">state</code> 更新函数作为<code class=\"language-text\">props</code>传递给子组件的模式叫作 <a href=\"https://kentcdodds.com/blog/compound-components-with-react-hooks/\">复合组件模式</a>。 你可能对React Router的<code class=\"language-text\">Switch</code>组件中的这种模式比较熟悉，它把<code class=\"language-text\">Route</code>组件作为子组件：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// react-router文档中的示例（https://reactrouter.com/web/api/Switch）</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">About</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/:user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NoMatch</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>现在已经确定的是，有时候需要调用<code class=\"language-text\">React.Children.map</code> 和 <code class=\"language-text\">React.Children.toArray</code>方法遍历它的 <code class=\"language-text\">children props</code> , 我们先回顾一下其中之一：<code class=\"language-text\">React.Children.toArray</code>.</p>\n<h3>React.Children.toArray</h3>\n<p>先看一个例子，看看它能做什么，它在哪里可能有用</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Children <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Debugger</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> children<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"mango\"</span><span class=\"token punctuation\">,</span> id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Debugger</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://css-tricks.com/<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          CSS Tricks\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://smashingmagazine.com/<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Smashing Magazine\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token punctuation\">{</span>\n          fruits<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruit</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fruit<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>margin<span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span>fruit<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Debugger</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以通过 <a href=\"https://codesandbox.io/embed/sm-article-22-hhuws?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox </a>来体验上面的代码。示例中的 <code class=\"language-text\">Debugger</code> 组件在渲染方面除了原样返回<code class=\"language-text\">children</code>组件以外什么都没做。 渲染之外则打印了 <code class=\"language-text\">children</code> 和<code class=\"language-text\">React.Children.toArray(children)</code>的值。</p>\n<p>如果你打开浏览器的开发者控制台，你就可以看到两者的不同之处：</p>\n<img src=\"https://obs-1d2f.oss-cn-hangzhou.aliyuncs.com/images/image-20210831165816562.png\" alt=\"image-20210831165816562\" style=\"zoom:50%;\">\n<ul>\n<li>第一个 <code class=\"language-text\">children</code> 的结构和值如下：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n  Object1<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> 第一个<span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>标签：<span class=\"token constant\">CSS</span> Tricks\n  Object2<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> 第二个<span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>标签：Smashing Magazine\n  <span class=\"token punctuation\">[</span>\n    Object3<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">1</span>个元素：apple\n    Object4<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">2</span>个元素：orange\n    Object5  <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">3</span>个元素：mango\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>第二个 <code class=\"language-text\">React.Children.toArray(children)</code> 的结构和值如下：</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n  Object1<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> 第一个<span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>标签：<span class=\"token constant\">CSS</span> Tricks\n  Object2<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> 第二个<span class=\"token operator\">&lt;</span>a<span class=\"token operator\">></span>标签：Smashing Magazine\n  Object3<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">1</span>个元素：apple\n  Object4<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">2</span>个元素：orange\n  Object5<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> fruits第<span class=\"token number\">3</span>个元素：mango\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>通过<a href=\"https://zh-hans.reactjs.org/docs/react-api.html#reactchildrentoarray\">React的文档</a>来理解发生的事情：</p>\n<blockquote>\n<p><code class=\"language-text\">React.Children.toArray</code> 将 <code class=\"language-text\">children</code> 这个复杂的数据结构以数组的方式扁平展开并返回，并为每个子节点分配一个 key。当你想要在渲染函数中操作子节点的集合时，它会非常实用，特别是当你想要在向下传递 <code class=\"language-text\">this.props.children</code> 之前对内容重新排序或获取子集时。</p>\n</blockquote>\n<p>分解一下：</p>\n<ol>\n<li><strong>以数组形式扁平化并返回<code class=\"language-text\">children</code> 复杂的数据结构</strong></li>\n</ol>\n<p>正如上面示例所看到的，<code class=\"language-text\">React.Children.toArray</code>会把 <code class=\"language-text\">children</code> （复杂的数组结构，前面提到过它可能是对象，数组甚至是函数）转化成一个扁平的数组并返回。此外有个 <a href=\"https://github.com/facebook/react/issues/6889#issuecomment-221858162\">Issue</a> 解释了它的行为：</p>\n<blockquote>\n<p>它 (<code class=\"language-text\">React.Children.toArray</code>) 并不会把子组件取出来并扁平化他们，这没有任何意义。它会扁平化嵌套的数组或对象，例如 <code class=\"language-text\">[[&#39;a&#39;, &#39;b&#39;],[&#39;c&#39;, [&#39;d&#39;]]]</code> 会被扁平化成<code class=\"language-text\">[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]</code>.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">React<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li><strong>为每个元素分配一个key</strong></li>\n</ol>\n<p>还是以上面的为例，下面是<code class=\"language-text\">console.log(children)</code> 展开一个元素后的内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  $$<span class=\"token keyword\">typeof</span><span class=\"token operator\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span>react<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    href<span class=\"token operator\">:</span> <span class=\"token string\">\"https://smashingmagazine.com\"</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token string\">\"Smashing Magazine\"</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">\"0 10px\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  ref<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// … </span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>下面是<code class=\"language-text\">console.log(React.Children.toArray(children))</code> 展开一个元素后的内容</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  $$<span class=\"token keyword\">typeof</span><span class=\"token operator\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span>react<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\".0\"</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    href<span class=\"token operator\">:</span> <span class=\"token string\">\"https://smashingmagazine.com\"</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token string\">\"Smashing Magazine\"</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">\"0 10px\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  ref<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// … </span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>正如你看到的，除了扁平化 <code class=\"language-text\">children</code> 以外，会为每一个子元素添加一个唯一的<code class=\"language-text\">key</code>属性，React文档如下：</p>\n<blockquote>\n<p><code class=\"language-text\">React.Children.toArray()</code> 在拉平展开子节点列表时，更改 key 值以保留嵌套数组的语义。也就是说，<code class=\"language-text\">toArray</code> 会为返回数组中的每个 key 添加前缀，以使得每个元素 key 的范围都限定在此函数入参数组的对象内。</p>\n</blockquote>\n<p>因为 <code class=\"language-text\">.toArray</code> 方法可能会改变<code class=\"language-text\">children</code>的顺序和位置，所以必须为每个元素分配一个唯一的<code class=\"language-text\">key</code>，以便React在协调（一致性比较）和渲染时进行优化。（参考 <a href=\"https://reactjs.org/docs/reconciliation.html#recursing-on-children\">reconciliation and rendering optimization</a>）</p>\n<p>重点关注一下 <em><code class=\"language-text\">使得每个元素 key 的范围都限定在此函数入参数组的对象内</code></em>，请看第2个数组中的每个元素的<code class=\"language-text\">key</code> (对应 <code class=\"language-text\">console.log(React.Children.toArray(children))</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">.0</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> first link\n<span class=\"token number\">.1</span>  <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> second link\n<span class=\"token number\">.2</span><span class=\"token operator\">:</span>$<span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> first fruit\n<span class=\"token number\">.2</span><span class=\"token operator\">:</span>$<span class=\"token number\">2</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> second fruit\n<span class=\"token number\">.2</span><span class=\"token operator\">:</span>$<span class=\"token number\">3</span> <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">></span> third fruit</code></pre></div>\n<p><code class=\"language-text\">fruits</code>是原始<code class=\"language-text\">children</code>中的一个嵌套数组，它们的<code class=\"language-text\">key</code>都以 <code class=\"language-text\">.2</code>作为前缀。 <code class=\"language-text\">.2</code>对应的事实是他们也是数组的一部分。后缀 <code class=\"language-text\">:$1</code> ,<code class=\"language-text\">:$2</code>, <code class=\"language-text\">:$3</code>对应<code class=\"language-text\">fruits</code> 产生的<code class=\"language-text\">&lt;div&gt;</code>元素，如果我们用数组索引作为<code class=\"language-text\">key</code>，相应的我们会分配到 <code class=\"language-text\">:0</code>, <code class=\"language-text\">:1</code>, <code class=\"language-text\">:2</code> 这样的后缀。</p>\n<p>假设<code class=\"language-text\">children</code>中有三层嵌套，如下所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Children <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Debugger</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> retVal <span class=\"token operator\">=</span> Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>retVal<span class=\"token punctuation\">,</span> <span class=\"token parameter\">child</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> child<span class=\"token punctuation\">.</span>key\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> retVal\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> arrayOfReactElements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">First</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Second</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Third</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Debugger</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>arrayOfReactElements<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Debugger</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>分配的<code class=\"language-text\">key</code>如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">.</span>$<span class=\"token number\">1</span>\n<span class=\"token number\">.1</span><span class=\"token operator\">:</span>$<span class=\"token number\">2</span>\n<span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>$<span class=\"token number\">3</span></code></pre></div>\n<p>可以通过 <a href=\"https://codesandbox.io/embed/sm-article-23-5fwrd?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox </a>来体验上面的代码， <code class=\"language-text\">$1</code>, <code class=\"language-text\">$2</code>, <code class=\"language-text\">$3</code> 后缀是因为我们给React组件显式地指定了<code class=\"language-text\">key</code> 否则React 会报怨缺少<code class=\"language-text\">key</code></p>\n<p>从上面的内容中，我们可以得出<code class=\"language-text\">React.Children.toArray</code>的两个用例。</p>\n<ol>\n<li>如果业务中需要 <code class=\"language-text\">children</code> 必须是一个数组，可以用<code class=\"language-text\">React.Children.toArray(children)</code> 替代，哪怕<code class=\"language-text\">children</code>是对象或者函数，它也能完美的工作。</li>\n<li>如果你必须对<code class=\"language-text\">children</code>进行排序、过滤、切片等，你可以信赖 <code class=\"language-text\">React.Children.toArray</code> 可以始终为所有的子组件生成唯一的<code class=\"language-text\">key</code>。</li>\n</ol>\n<h3>问题</h3>\n<p><code class=\"language-text\">React.Children.toArray</code>也有一些问题，代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Children <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>\n        Children\n          <span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n        <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://css-tricks.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Google\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://smashingmagazine.com<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Smashing Magazine\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://arihantverma.com<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Arihant’s Website\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以通过 <a href=\"https://codesandbox.io/embed/sm-article-24-dqld3?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox</a>体验上述代码。 如果观察<code class=\"language-text\">React.Fragment(&lt;&gt;...&lt;/&gt;)</code>的子节点，你就会发现 <code class=\"language-text\">li</code> 标签中一下子渲染出两个<code class=\"language-text\">&lt;a&gt;</code>标签。如下图所示：</p>\n<img src=\"https://obs-1d2f.oss-cn-hangzhou.aliyuncs.com/images/image-20210831204750481.png\" alt=\"image-20210831204750481\" style=\"zoom:50%;\">\n<p>这是因为 <code class=\"language-text\">React.Children.toArray</code>不会遍历<code class=\"language-text\">React.Fragment</code>（ <a href=\"https://github.com/facebook/react/issues/6889\">参考这个Issue</a> ）。那我们可以做些什么呢？幸运的是啥也不用做。因为有一个开源的库 <a href=\"https://github.com/grrowl/react-keyed-flatten-children\"><code class=\"language-text\">react-keyed-flatten-children</code></a>替我们做了这些事情。</p>\n<p>用伪代码（实际的代码用注释来对应到下面6点）说明一下这个库做了什么：</p>\n<ol>\n<li>这是一个函数，它只需要一个<code class=\"language-text\">children</code>作为必要的参数；</li>\n<li>遍历 <code class=\"language-text\">React.Children.toArray(children)</code> 并将子元素收集到累加器数组中；</li>\n<li>遍历的过程中，如果子节点是<code class=\"language-text\">string</code>或<code class=\"language-text\">number</code>，直接把值存入累加器数组中；</li>\n<li>如果子节点是有效的React组件，则先克隆一份，并分配一个适合的key，然后存入累加器数组中；</li>\n<li>如果子节点是<code class=\"language-text\">React.Fragment</code>，函数把<code class=\"language-text\">&lt;&gt;&lt;/&gt;</code>的<code class=\"language-text\">children</code>作为参数来调用自身 (递归调用) ，然后将递归调用的结果存入累加器数组中；</li>\n<li>在进行上述步骤时，会记录遍历的深度，所以<code class=\"language-text\">React.Fragment</code>的子节点会分配正确的<code class=\"language-text\">key</code>。嵌套数组的<code class=\"language-text\">key</code>也会进行相同的处理。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Children<span class=\"token punctuation\">,</span>\n  isValidElement<span class=\"token punctuation\">,</span>\n  cloneElement\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isFragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-is\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> type <span class=\"token punctuation\">{</span>\n  ReactNode<span class=\"token punctuation\">,</span>\n  ReactChild<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token comment\">/*************** 1. ***************/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">flattenChildren</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// 唯一必须的参数</span>\n  children<span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// only used for debugging</span>\n  depth<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// is not required, start with default = []</span>\n  keys<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>string <span class=\"token operator\">|</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactChild<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/*************** 2. ***************/</span>\n  <span class=\"token keyword\">return</span> Children<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token operator\">:</span> ReactChild<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">,</span> nodeIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFragment</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/*************** 5. ***************/</span>\n        acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>\n          acc<span class=\"token punctuation\">,</span>\n          <span class=\"token function\">flattenChildren</span><span class=\"token punctuation\">(</span>\n            node<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span>\n            depth <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">/*************** 6. ***************/</span>\n            keys<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>key <span class=\"token operator\">||</span> nodeIndex<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/*************** 4. ***************/</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isValidElement</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">/*************** 6. ***************/</span>\n              key<span class=\"token operator\">:</span> keys<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token comment\">/*************** 3. ***************/</span>\n          <span class=\"token keyword\">typeof</span> node <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span>\n          <span class=\"token operator\">||</span> <span class=\"token keyword\">typeof</span> node <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span>\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          acc<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/*************** Acculumator Array ***************/</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>对同样的示例，我们通过这个函数来解决之前的问题，代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> flattenChildren <span class=\"token keyword\">from</span> <span class=\"token string\">'react-keyed-flatten-children'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Fragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">List</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">flattenChildren</span><span class=\"token punctuation\">(</span>\n          children\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n        <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://css-tricks.com<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Google\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://smashingmagazine.com<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Smashing Magazine\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        \n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n          <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://arihantverma.com<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>padding<span class=\"token operator\">:</span> <span class=\"token string\">'0 10px'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Arihant’s Website\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以通过 <a href=\"https://codesandbox.io/embed/sm-article-25-b76gn?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox</a> 查看最终的结果，<strong>It works！</strong></p>\n<p>这个函数的github仓库里有 <a href=\"https://github.com/grrowl/react-keyed-flatten-children/blob/master/index.spec.tsx\">7 个测试用例</a> ，通过阅读这些测试用例来推导这个函数的功能也是很有意思的。</p>\n<h3><code class=\"language-text\">Children</code> 工具类长期存在的问题</h3>\n<blockquote>\n<p><code class=\"language-text\">React.Children</code> 是一个有缺陷的抽象，并且处理维护模式。</p>\n<p>— <a href=\"https://github.com/reactjs/rfcs/pull/61#issuecomment-431247764\">丹大师</a></p>\n</blockquote>\n<p>使用<code class=\"language-text\">Children</code>工具类的方法改变 <code class=\"language-text\">children</code> 行为的问题是：它在组件只有1层嵌套时才能工作。如果当我们把 <code class=\"language-text\">children</code> 包裹在另外一个组件时，就会失去可组合性。还是以第1个面包屑的示例来解释我在说啥：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Children<span class=\"token punctuation\">,</span> cloneElement <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Breadcrumbs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        listStyle<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n        display<span class=\"token operator\">:</span> <span class=\"token string\">\"flex\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> isLast <span class=\"token operator\">=</span> index <span class=\"token operator\">===</span> children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// if (! isLast &amp;&amp; ! child.props.link ) {</span>\n        <span class=\"token comment\">//   throw new Error(`</span>\n        <span class=\"token comment\">//     BreadcrumbItem child no.</span>\n        <span class=\"token comment\">//     ${index + 1} should be passed a 'link' prop`</span>\n        <span class=\"token comment\">//   )</span>\n        <span class=\"token comment\">// } </span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>link <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n                <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>child<span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>link<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                  display<span class=\"token operator\">:</span> <span class=\"token string\">\"inline-block\"</span><span class=\"token punctuation\">,</span>\n                  textDecoration<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                  </span><span class=\"token punctuation\">{</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    isLast<span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span><span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                  isLast<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>isLast <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginRight<span class=\"token operator\">:</span> <span class=\"token string\">\"5px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">BreadcrumbItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isLast<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        color<span class=\"token operator\">:</span> isLast <span class=\"token operator\">?</span> <span class=\"token string\">\"black\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BreadcrumbItemCreator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span> <span class=\"token attr-name\">link</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://smashingmagazine.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Smashing Magazine\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Breadcrumbs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span> <span class=\"token attr-name\">link</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://goibibo.com/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Goibibo\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span> <span class=\"token attr-name\">link</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://goibibo.com/hotels/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Goibibo Hotels\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      &lt;!-- 再包裹一层 -->\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItemCreator</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        A Fancy Hotel Name\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BreadcrumbItem</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Breadcrumbs</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>通过 <a href=\"https://codesandbox.io/embed/sm-article-26-7067h?fontsize=14&#x26;hidenavigation=1&#x26;theme=dark\">Codesandbox </a> 看一下效果吧。尽管新的组件 <code class=\"language-text\">&lt;BreadcrumbItemCreator /&gt;</code> 正常渲染了，但是是因为<code class=\"language-text\">Breadcrumb</code> 组件没有办法获取到<code class=\"language-text\">link</code>属性，所以没办法以<code class=\"language-text\">&lt;a&gt;</code>形式来包裹<code class=\"language-text\">child</code>。</p>\n<p>为了解决这个问题，React团队亲自下场推出了一个实验性的API： <a href=\"https://www.npmjs.com/package/react-call-return\">react-call-return</a>（<strong>现在已经失效了</strong>）</p>\n<p><a href=\"https://www.youtube.com/watch?v=60MfXWyQhRE\">Ryan Florence的视频</a> 解释了问题的细节以及 <code class=\"language-text\">react-call-return</code> 是如何解决这个问题的。因为这个npm包从未在任何版本的React中发布过，所以他们计划从这个包中汲取灵感，开发出可用于生产环境的解决方案。 <a href=\"https://github.com/reactjs/rfcs/pull/61#issuecomment-584402735\">可以参考丹大师的这个Comment</a></p>\n<h3>总结</h3>\n<p>最后总结一下，我们学到了：</p>\n<ol>\n<li><code class=\"language-text\">React.Children</code> 的两个工具类 ：如何使用 <code class=\"language-text\">React.Children.map</code> 方法来构建复合组件，并深入学习了另一个方法<code class=\"language-text\">React.Children.toArray</code> ；</li>\n<li>学习了 <code class=\"language-text\">React.Children.toArray</code> 是如何把 <code class=\"language-text\">children</code> （可能是对象，数组或函数）转换成扁平化数组的方式。这样就可以按需操作，如排序、过滤，切片等；</li>\n<li>学习了 <code class=\"language-text\">React.Children.toArray</code> 不会遍历<code class=\"language-text\">React Fragments</code>内的子组件</li>\n<li>学习了一个开源npm包 <code class=\"language-text\">react-keyed-flatten-children</code> ，并且学习了它是如何解决第3点问题的方法。</li>\n<li>了解到 <code class=\"language-text\">Children</code> 工具类处于维护模式，因为他们不能很好的组合。</li>\n</ol>\n<h3>参考资料</h3>\n<ul>\n<li><a href=\"https://kentcdodds.com/blog/compound-components-with-react-hooks/\">Compound components with react hooks</a></li>\n<li><a href=\"https://github.com/facebook/react/issues/6889#issuecomment-221858162\">React.Children.toArray array flattening github issue explanation</a></li>\n<li><a href=\"https://reactjs.org/docs/reconciliation.html#recursing-on-children\">React reconciliation: Recursing on children</a></li>\n<li><a href=\"https://github.com/facebook/react/issues/6889\"><code class=\"language-text\">React.Children.toArray</code> doesn’t traverse into fragments</a></li>\n<li><a href=\"https://github.com/grrowl/react-keyed-flatten-children\"><code class=\"language-text\">react-keyed-flatten-children</code></a></li>\n<li><a href=\"https://github.com/grrowl/react-keyed-flatten-children/blob/master/index.spec.tsx\"><code class=\"language-text\">react-keyed-flatten-children</code></a> <a href=\"https://github.com/grrowl/react-keyed-flatten-children/blob/master/index.spec.tsx\">tests</a></li>\n<li><a href=\"https://www.npmjs.com/package/react-call-return\">react-call-return</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=60MfXWyQhRE\">Ryan Florence’s Video explaining react-call-return</a></li>\n<li><a href=\"https://github.com/reactjs/rfcs/pull/61#issuecomment-584402735\">React team’s plan to replace <code class=\"language-text\">Children</code> utilities with something more composable</a></li>\n<li><a href=\"https://mxstbr.blog/2017/02/react-children-deepdive/\">Max Stoiber’s <code class=\"language-text\">React Children</code> Deep Dive</a></li>\n<li><a href=\"https://github.com/reactjs/rfcs/pull/61#issuecomment-431247764\"><code class=\"language-text\">React.Children</code> is a leaky abstraction, and is in maintenance mode</a></li>\n</ul>","frontmatter":{"title":"React Children Utilities","date":"2021/08/31 23:05:13","description":"这篇博客，我们将会讨论和学习如何对React children进行遍历。特别是我们会深入研究一下React提供的React.Children.toArray方法，它可以确保遍历children时的性能和准确性。"}},"previous":{"fields":{"slug":"/react/react-element/"},"frontmatter":{"title":"React Element"}},"next":{"fields":{"slug":"/react/hooks-separation-of-concerns/"},"frontmatter":{"title":"用Hooks实现关注点分离"}}},"pageContext":{"id":"4488f158-deb9-53fd-a036-df85780a1f7b","previousPostId":"c1fec2b5-2364-50a9-863d-0365bdb87afe","nextPostId":"c06b03d1-2e60-5be5-93fa-493347562963"}},"staticQueryHashes":["2355076697","2841359383"]}