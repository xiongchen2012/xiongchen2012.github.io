{"version":3,"sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","useDarkMode","theme","toggleTheme","mountedComponent","themeMode","lightTheme","darkTheme","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"iOA+EA,UApEkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAFG,GAIOC,SAAxCC,EAJiC,KAI1BC,EAJ0B,KAIbC,EAJa,KAKlCC,EAAsB,UAAVH,EAAoBI,KAAaC,KAEnD,OAAIH,EAEiB,IAAjBN,EAAMU,OAEJ,gBAAC,IAAD,CAAQf,SAAUA,EAAUI,MAAOH,GAC/B,gBAAC,IAAD,CAAKG,MAAM,UACX,mDAMR,gBAAC,KAAD,CAAeK,MAAOG,GACpB,gBAAC,KAAD,MACA,gBAAC,IAAD,CAAQZ,SAAUA,EAAUI,MAAOH,GAC/B,gBAAC,IAAD,CAAKG,MAAM,UACX,gBAAC,IAAD,MAAO,gBAAC,IAAD,CAAQK,MAAOA,EAAOC,YAAaA,IAC1C,sBAAIM,MAAO,CAAEC,UAAU,SAClBZ,EAAMa,KAAI,SAACC,GACR,IAAMf,EAAQe,EAAKC,YAAYhB,OAASe,EAAKE,OAAOC,KAEpD,OACI,sBAAIC,IAAKJ,EAAKE,OAAOC,MACjB,2BACIE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACI,0BACI,gBAAC,EAAAC,KAAD,CACIC,GAAIT,EAAKE,OAAOC,KAChBO,SAAS,OAET,wBAAMA,SAAS,YACVzB,KAIb,6BAAQe,EAAKC,YAAYU,OAE7B,+BACI,qBACIC,wBAAyB,CACrBC,OACIb,EAAKC,YAAYa,aACjBd,EAAKe,SAEbL,SAAS,yBAhDhB","file":"component---src-pages-index-js-17aa86b6faee9a1bb842.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport {ThemeProvider} from \"styled-components\";\n\nimport  {useDarkMode} from \"../styles/useDarkMode\";\nimport { GlobalStyles, lightTheme, darkTheme } from \"../styles/globalStyles\";\nimport Toggle from \"../components/toggle\";\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const [theme, toggleTheme, mountedComponent] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  \n  if(!mountedComponent) return <div/>\n\n  if (posts.length === 0) {\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"所有的博客\" />\n            <p>Deathdealer暂时隐藏了所有的文档</p>\n        </Layout>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles/>\n      <Layout location={location} title={siteTitle}>\n          <SEO title=\"所有的博客\" />\n          <Bio /><Toggle theme={theme} toggleTheme={toggleTheme} />\n          <ol style={{ listStyle: `none` }}>\n              {posts.map((post) => {\n                  const title = post.frontmatter.title || post.fields.slug;\n\n                  return (\n                      <li key={post.fields.slug}>\n                          <article\n                              className=\"post-list-item\"\n                              itemScope\n                              itemType=\"http://schema.org/Article\"\n                          >\n                              <header>\n                                  <h2>\n                                      <Link\n                                          to={post.fields.slug}\n                                          itemProp=\"url\"\n                                      >\n                                          <span itemProp=\"headline\">\n                                              {title}\n                                          </span>\n                                      </Link>\n                                  </h2>\n                                  <small>{post.frontmatter.date}</small>\n                              </header>\n                              <section>\n                                  <p\n                                      dangerouslySetInnerHTML={{\n                                          __html:\n                                              post.frontmatter.description ||\n                                              post.excerpt,\n                                      }}\n                                      itemProp=\"description\"\n                                  />\n                              </section>\n                          </article>\n                      </li>\n                  );\n              })}\n          </ol>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD HH:mm:ss\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}