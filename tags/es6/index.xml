<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Es6 on Deathdealer-Archives</title>
    <link>https://xiongchen2012.github.io/tags/es6/</link>
    <description>Recent content in Es6 on Deathdealer-Archives</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>This site is generated by &lt;a href=&#39;http://gohugo.io&#39; style=&#39;color:rgb(95, 191, 94);&#39;&gt;HUGO&lt;/a&gt; with a theme &lt;a href=&#39;https://github.com/laozhu/hugo-nuo&#39; style=&#39;color:rgb(95, 191, 94);&#39;&gt;HUGO-NUO&lt;/a&gt; © deathdealer.cn</copyright>
    <lastBuildDate>Sat, 10 Mar 2018 23:03:40 +0800</lastBuildDate>
    
	<atom:link href="https://xiongchen2012.github.io/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ES6对象的加强</title>
      <link>https://xiongchen2012.github.io/post/es6-object-enhancement/</link>
      <pubDate>Sat, 10 Mar 2018 23:03:40 +0800</pubDate>
      
      <guid>https://xiongchen2012.github.io/post/es6-object-enhancement/</guid>
      <description>ES6中对象的加强 Concise Field/Method Expression（属性/方法的简洁表示） 以前属性需要中规中矩的写出属性名和属性的值，比如：
var user = { name: &amp;quot;deathdealer&amp;quot;， sendEmail: function(){ // some code here } }  ES6以后属性可以直接指定为变量，换言之就是某变量成为对象的属性。例如:
let name = &amp;quot;deathdealer&amp;quot;; let age = 15; let user = { name, age, sendEmail(){ // some code here } } /* 结果等价于： { name: &#39;deathdealer&#39;, age: 15, } */  TIP：属性名是变量名，属性值是变量的值
简洁属性/方法表示的常见使用场景有：
1. 函数返回值
函数中的n个变量，可以分别进行计算求值（比如复杂的计算，网络请求等），最后再组织成一个对象返回给调用者。比如：
function someMethod(){ let xxx,yyy,zzz; xxx = evaluation(); yyy = http(); zzz = io(); return {xxx,yyy,zzz} } // 等同于 return { xxx: xxx, yyy: yyy, zzz: zzz }  2.</description>
    </item>
    
  </channel>
</rss>