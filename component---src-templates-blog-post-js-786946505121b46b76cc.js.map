{"version":3,"sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"names":["data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","useDarkMode","theme","toggleTheme","mountedComponent","themeMode","lightTheme","darkTheme","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"iOA6EA,UAlEyB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAH6B,GAIAC,SAAxCC,EAJwC,KAIjCC,EAJiC,KAIpBC,EAJoB,KAKzCC,EAAsB,UAAVH,EAAoBI,KAAaC,KAEnD,OAAIH,EAEF,gBAAC,KAAD,CAAeF,MAAOG,GACpB,gBAAC,KAAD,MACA,gBAAC,IAAD,CAAQb,SAAUA,EAAUM,MAAOH,GACnC,gBAAC,IAAD,CACEG,MAAOL,EAAKe,YAAYV,MACxBW,YAAahB,EAAKe,YAAYC,aAAehB,EAAKiB,UAEpD,gBAAC,IAAD,CAAQR,MAAOA,EAAOC,YAAaA,IACnC,2BACEQ,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYrB,EAAKe,YAAYV,OAC1C,yBAAIL,EAAKe,YAAYO,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQxB,EAAKyB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKH,UAAU,iBACb,sBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGzB,GACC,gBAAC,EAAA0B,KAAD,CAAMC,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACK9B,EAASS,YAAYV,QAI9B,0BACGE,GACC,gBAAC,EAAAyB,KAAD,CAAMC,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKQ,YAAYV,MADpB,WA/CiB","file":"component---src-templates-blog-post-js-786946505121b46b76cc.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport {ThemeProvider} from \"styled-components\";\n\nimport  {useDarkMode} from \"../styles/useDarkMode\";\nimport { GlobalStyles, lightTheme, darkTheme } from \"../styles/globalStyles\";\nimport Toggle from \"../components/toggle\";\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const [theme, toggleTheme, mountedComponent] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  \n  if(!mountedComponent) return <div/>\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles/>\n      <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Toggle theme={theme} toggleTheme={toggleTheme} />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n    </ThemeProvider>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD HH:mm:ss\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}